
import java.security.Principal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.raghu.entity.User;
import com.app.raghu.entity.UserRequest;
import com.app.raghu.entity.UserResponse;
import com.app.raghu.service.IUserService;
import com.app.raghu.util.JwtUtil;

@RestController
@RequestMapping("/user")
public class UserRestController {

	@Autowired
	private AuthenticationManager authenticationManager;

	@Autowired
	private UserServiceImpl service;

	@Autowired
	private JwtUtil jwtUtil;
	
	//1. save User data in database
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(
			@RequestBody User user) 
	{
		Integer id  = service.saveUser(user);
		String body = "User '"+id+"' saved";
		//return new ResponseEntity<String>(body,HttpStatus.OK);
		return ResponseEntity.ok(body);
	}
	
	//2. Validate user and generate token(login)
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(
			@RequestBody UserRequest request)
	{
// UserRequest is {username, password}
// UserResponse is {token, note}

		// validate un/pwd with database
		authenticationManager.authenticate(
				new UsernamePasswordAuthenticationToken(
						request.getUsername(), request.getPassword()));
		
		String token = util.generateToken(request.getUsername());
		return ResponseEntity.ok(
				new UserResponse(token,"Success! Generated By NIT-RAGHU")
				);
	}
	
	
	//3. after login only
	@PostMapping("/welcome")
	public ResponseEntity<String> accessData(Principal p)
	{
		return ResponseEntity.ok("Hello User!"+ p.getName());
	}
}
